{"version":3,"sources":["themes/theme.js","components/Auth/Signup.js","components/Auth/Login.js","components/Main/StatisticChart/CategoryChart/helpers/getDataSet.js","components/Main/StatisticChart/CategoryChart/GlobalChart.js","components/Main/StatisticChart/CategoryChart/CountryChart.js","components/Main/StatisticChart/CategoryChart/StateChart.js","components/Main/StatisticChart/StatisticChart.js","components/Main/StatisticChart/index.js","components/Main/RequestDialog.js","context/userContext.js","components/Main/Home.js","components/SnackbarError.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["theme","createTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","overrides","MuiInput","input","palette","primary","main","secondary","Signup","user","register","history","useHistory","useState","formErrorMessage","setFormErrorMessage","handleRegister","event","a","preventDefault","form","currentTarget","formElements","elements","username","value","email","password","confirmPassword","useEffect","id","push","Grid","container","justifyContent","Box","item","Typography","href","to","Button","variant","color","onSubmit","FormControl","TextField","label","name","type","required","error","inputProps","minLength","FormHelperText","size","Login","login","handleLogin","margin","data","labels","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","width","height","px","py","getDataSet","sx","display","flexWrap","entries","map","index","country","flexDirection","state","category","statistic","border","p","my","GlobalChart","global","CountryChart","StateChart","StatisticChart","renderChart","FormDialog","requestData","open","setOpen","byFemale","byLastName","byAge","desiredTypes","setDesiredTypes","requestButtonStatus","setRequestButtonStatus","handleClose","handleChange","target","checked","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","mx","FormGroup","FormControlLabel","control","Checkbox","onChange","DialogActions","disabled","React","createContext","ChartJS","ArcElement","Tooltip","Legend","useStyles","makeStyles","root","formElement","Home","logout","classes","useContext","UserContext","isLoggedIn","setIsLoggedIn","requests","setRequests","setStatistic","currentRequestId","setCurrentRequestId","isFetching","fetchPastRequests","axios","get","console","handleLogout","post","downloadCsv","csvString","filename","blob","Blob","window","navigator","msSaveOrOpenBlob","msSaveBlob","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","createdAt","find","req","created_at","join","slice","Container","className","mr","InputLabel","Select","labelId","e","request","MenuItem","snackbar","icon","SnackbarError","setSnackBarOpen","errorMessage","snackBarOpen","Snackbar","message","action","Fragment","ContentProps","withRouter","props","setUser","setErrorMessage","credentials","localStorage","setItem","token","response","delete","removeItem","fetchUser","prev","Provider","path","render","interceptors","use","config","getItem","headers","App","Boolean","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7eb99532.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core\";\n\nexport const theme = createTheme({\n  typography: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontSize: 14,\n    button: {\n      textTransform: \"none\",\n      letterSpacing: 0,\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiInput: {\n      input: {\n        fontWeight: \"bold\",\n      },\n    },\n  },\n  palette: {\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#B0B0B0\" },\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nconst Signup = ({ user, register }) => {\n  const history = useHistory();\n\n  const [formErrorMessage, setFormErrorMessage] = useState({});\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const username = formElements.username.value;\n    const email = formElements.email.value;\n    const password = formElements.password.value;\n    const confirmPassword = formElements.confirmPassword.value;\n\n    if (password !== confirmPassword) {\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\n      return;\n    }\n    await register({ username, email, password });\n  };\n\n  useEffect(() => {\n    if (user && user.id) history.push(\"/\");\n  }, [user, history]);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to log in?</Typography>\n          <Link href=\"/login\" to=\"/login\">\n            <Button variant=\"outlined\" color=\"primary\">\n              Login\n            </Button>\n          </Link>\n        </Grid>\n        <form onSubmit={handleRegister}>\n          <Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  label=\"E-mail address\"\n                  aria-label=\"e-mail address\"\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  aria-label=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"password\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  label=\"Confirm Password\"\n                  aria-label=\"confirm password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"confirmPassword\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Create\n            </Button>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n} from \"@material-ui/core\";\n\nconst Login = ({ user, login }) => {\n  const history = useHistory();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const username = formElements.username.value;\n    const password = formElements.password.value;\n\n    await login({ username, password });\n  };\n\n  useEffect(() => {\n    if (user && user.id) history.push(\"/\");\n  }, [user, history]);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to register?</Typography>\n          <Link href=\"/register\" to=\"/register\">\n            <Button variant=\"outlined\" color=\"primary\">\n              Register\n            </Button>\n          </Link>\n        </Grid>\n        <form onSubmit={handleLogin}>\n          <Grid>\n            <Grid>\n              <FormControl margin=\"normal\" required>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                />\n              </FormControl>\n            </Grid>\n            <FormControl margin=\"normal\" required>\n              <TextField\n                label=\"password\"\n                aria-label=\"password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </FormControl>\n            <Grid>\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"large\"\n              >\n                Login\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Login;\n","export default function (data) {\n  return {\n    labels: Object.keys(data),\n    datasets: [\n      {\n        data: Object.values(data),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        hoverBackgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\",\n          \"rgba(54, 162, 235, 0.5)\",\n          \"rgba(255, 206, 86, 0.5)\",\n          \"rgba(75, 192, 192, 0.5)\",\n          \"rgba(153, 102, 255, 0.5)\",\n          \"rgba(255, 159, 64, 0.5)\",\n        ],\n      },\n    ],\n  };\n}\n","import { Box } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport getDataSet from \"./helpers/getDataSet\";\n\nexport default function ({ data }) {\n  return (\n    <>\n      <h3>Global Chart</h3>\n      <Box width={220} height={240} px={5} py={2}>\n        <Doughnut data={getDataSet(data)} />\n      </Box>\n    </>\n  );\n}\n","import { Box } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport getDataSet from \"./helpers/getDataSet\";\n\nexport default function ({ data }) {\n  return (\n    <>\n      <h3>Country Chart</h3>\n      <Box\n        sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n        width={\"100%\"}\n        px={5}\n        py={2}\n      >\n        {Object.entries(data).map(([country, data], index) => (\n          <Box\n            key={index}\n            sx={{ flexDirection: \"column\" }}\n            width={220}\n            height={240}\n          >\n            {country}\n            <Doughnut data={getDataSet(data)} />\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n}\n","import { Box } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport getDataSet from \"./helpers/getDataSet\";\n\nexport default function ({ data }) {\n  return (\n    <>\n      <h3>State Chart</h3>\n      <Box\n        sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n        width={\"100%\"}\n        px={5}\n        py={2}\n      >\n        {Object.entries(data).map(([state, data], index) => (\n          <Box\n            key={index}\n            sx={{ flexDirection: \"column\" }}\n            width={220}\n            height={240}\n          >\n            {state}\n            <Doughnut data={getDataSet(data)} />\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport GlobalChart from \"./CategoryChart/GlobalChart\";\nimport CountryChart from \"./CategoryChart/CountryChart\";\nimport StateChart from \"./CategoryChart/StateChart\";\n\nexport default function ({ category, statistic }) {\n  return (\n    <>\n      <h2>Chart by {category}</h2>\n      <Box border=\"1px solid #3A8DFF7F\" p={3} my={2}>\n        {statistic && (\n          <>\n            <GlobalChart data={statistic.global} />\n            <CountryChart data={statistic.country} />\n            <StateChart data={statistic.state} />\n          </>\n        )}\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport StatisticChart from \"./StatisticChart\";\n\nconst renderChart = (type, data, index) => {\n  switch (type) {\n    case \"byFemale\":\n      return <StatisticChart key={index} category=\"Female\" statistic={data} />;\n    case \"byLastName\":\n      return (\n        <StatisticChart key={index} category=\"Last Name\" statistic={data} />\n      );\n    case \"byAge\":\n      return <StatisticChart key={index} category=\"Age\" statistic={data} />;\n  }\n\n  return \"\";\n};\n\nexport default function ({ statistic }) {\n  return (\n    <>\n      {statistic &&\n        Object.entries(statistic).map(([key, data], index) =>\n          renderChart(key, data, index)\n        )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n  RadioGroup,\n  Radio,\n  Box,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({ requestData }) {\n  const [open, setOpen] = useState(false);\n  const [desiredTypes, setDesiredTypes] = useState({\n    byFemale: true,\n    byLastName: true,\n    byAge: true,\n  });\n  const [requestButtonStatus, setRequestButtonStatus] = useState(true);\n\n  useEffect(() => {\n    setRequestButtonStatus(\n      desiredTypes.byAge | desiredTypes.byFemale | desiredTypes.byLastName\n    );\n  }, [desiredTypes.byAge, desiredTypes.byFemale, desiredTypes.byLastName]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setDesiredTypes({\n      ...desiredTypes,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const handleRequest = () => {\n    setOpen(false);\n    requestData({ desiredTypes });\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Request Data\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <Box px={2} py={1}>\n          <DialogTitle id=\"form-dialog-title\">Request Form</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Select necessary statistic types\n            </DialogContentText>\n            <Box mx={2}>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={desiredTypes.byFemale}\n                      onChange={handleChange}\n                      name=\"byFemale\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"By female\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={desiredTypes.byLastName}\n                      onChange={handleChange}\n                      name=\"byLastName\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"By last name\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={desiredTypes.byAge}\n                      onChange={handleChange}\n                      name=\"byAge\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"By age\"\n                />\n              </FormGroup>\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              disabled={!requestButtonStatus}\n              onClick={() => handleRequest()}\n              color=\"primary\"\n            >\n              Request\n            </Button>\n          </DialogActions>\n        </Box>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default React.createContext();\n","import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Container,\n  Box,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport StatisticChart from \"./StatisticChart\";\n\nimport RequestDialog from \"./RequestDialog\";\nimport UserContext from \"../../context/userContext\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formElement: {\n    width: \"30rem\",\n    margin: \"1rem 2rem\",\n  },\n}));\n\nconst Home = ({ user, logout }) => {\n  const history = useHistory();\n  const User = useContext(UserContext);\n\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [statistic, setStatistic] = useState(null);\n  const [currentRequestId, setCurrentRequestId] = useState(\"\");\n\n  // Lifecycle\n\n  useEffect(() => {\n    // when fetching, prevent redirect\n    if (user?.isFetching) return;\n\n    if (user && user.id) {\n      setIsLoggedIn(true);\n    } else {\n      // If we were previously logged in, redirect to login instead of register\n      if (isLoggedIn) history.push(\"/login\");\n      else history.push(\"/register\");\n    }\n  }, [user, history, isLoggedIn]);\n\n  useEffect(() => {\n    const fetchPastRequests = async () => {\n      try {\n        const { data } = await axios.get(\"/api/requests\");\n        setCurrentRequestId(data[0].id);\n        setRequests(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (!user.isFetching) {\n      fetchPastRequests();\n    }\n  }, [user]);\n\n  useEffect(async () => {\n    const { data } = await axios.get(\n      `/api/requests/${currentRequestId}?format=json`\n    );\n    setStatistic(data.statistic);\n  }, [currentRequestId]);\n\n  const handleLogout = async () => {\n    if (user && user.id) {\n      await logout(user.id);\n    }\n  };\n\n  const handleChange = (e) => {\n    setCurrentRequestId(e.target.value);\n  };\n\n  const requestData = async ({ desiredTypes }) => {\n    const { data } = await axios.post(\"/api/requests/new\", { desiredTypes });\n    setRequests([data, ...requests]);\n    setCurrentRequestId(data.id);\n  };\n\n  function downloadCsv(csvString, filename) {\n    var blob = new Blob([csvString]);\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, \"filename.csv\");\n    } else {\n      var a = window.document.createElement(\"a\");\n\n      a.href = window.URL.createObjectURL(blob, {\n        type: \"text/plain\",\n      });\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n\n  const download = async (id) => {\n    const { data } = await axios.get(`/api/requests/${id}?format=csv`);\n    const createdAt = requests.find(\n      (req) => req.id === currentRequestId\n    ).created_at;\n\n    downloadCsv(\n      data.join(\"\\n\"),\n      `report-${createdAt.slice(0, 10)} ${createdAt.slice(11, 19)}.csv`\n    );\n  };\n\n  return (\n    <Container>\n      <Box className={classes.root}>\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Box sx={{ display: \"flex\" }}>\n            <Box mr={2}>\n              <RequestDialog requestData={requestData} />\n            </Box>\n            <Box>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => download(currentRequestId)}\n              >\n                Download\n              </Button>\n            </Box>\n          </Box>\n          <Box>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Box>\n        </Box>\n        <FormControl className={classes.formElement}>\n          <InputLabel id=\"request-date\">Request Date</InputLabel>\n          <Select\n            id=\"request-select\"\n            label=\"Request Date\"\n            labelId=\"request-date-id\"\n            value={currentRequestId}\n            onChange={handleChange}\n          >\n            {requests.map((request) => (\n              <MenuItem key={request.id} value={request.id}>\n                {request.created_at.slice(0, 10)}&nbsp;&nbsp;&nbsp;\n                {request.created_at.slice(11, 19)}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <StatisticChart statistic={statistic} />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    backgroundColor: \"red\",\n    fontWeight: \"bold\",\n  },\n  icon: {\n    color: \"white\",\n  },\n}));\n\nconst SnackbarError = ({ setSnackBarOpen, errorMessage, snackBarOpen }) => {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      open={snackBarOpen}\n      onClose={() => setSnackBarOpen(false)}\n      message={errorMessage || \"Sorry, an error occured. Please try again\"}\n      action={\n        <React.Fragment>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.icon}\n            size=\"small\"\n            onClick={() => setSnackBarOpen(false)}\n          >\n            <Close color=\"secondary\" />\n          </Button>\n        </React.Fragment>\n      }\n      ContentProps={{\n        classes: {\n          root: classes.snackbar,\n        },\n      }}\n    />\n  );\n};\n\nexport default SnackbarError;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nimport Signup from \"./components/Auth/Signup.js\";\nimport Login from \"./components/Auth/Login.js\";\nimport { SnackbarError, Home } from \"./components\";\nimport UserContext from \"./context/userContext\";\n\nconst Routes = (props) => {\n  const [user, setUser] = useState({\n    isFetching: true,\n  });\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const login = async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/auth/login\", credentials);\n      await localStorage.setItem(\"statistic-token\", data.token);\n      setUser(data);\n    } catch (error) {\n      console.error(error);\n      setUser({ error: error.response.data.error || \"Server Error\" });\n    }\n  };\n\n  const register = async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/auth/register\", credentials);\n      await localStorage.setItem(\"statistic-token\", data.token);\n      setUser(data);\n    } catch (error) {\n      console.error(error);\n      setUser({ error: error.response.data.error || \"Server Error\" });\n    }\n  };\n\n  const logout = async (id) => {\n    try {\n      await axios.delete(\"/auth/logout\");\n      await localStorage.removeItem(\"statistic-token\");\n      setUser({});\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Lifecycle\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setUser((prev) => ({ ...prev, isFetching: true }));\n      try {\n        const { data } = await axios.get(\"/auth/user\");\n        setUser(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setUser((prev) => ({ ...prev, isFetching: false }));\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    if (user?.error) {\n      // check to make sure error is what we expect, in case we get an unexpected server error object\n      if (typeof user.error === \"string\") {\n        setErrorMessage(user.error);\n      } else {\n        setErrorMessage(\"Internal Server Error. Please try again\");\n      }\n      setSnackBarOpen(true);\n    }\n  }, [user?.error]);\n\n  if (user?.isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      {snackBarOpen && (\n        <SnackbarError\n          setSnackBarOpen={setSnackBarOpen}\n          errorMessage={errorMessage}\n          snackBarOpen={snackBarOpen}\n        />\n      )}\n      <Switch>\n        <Route\n          path=\"/login\"\n          render={() => <Login user={user} login={login} />}\n        />\n        <Route\n          path=\"/register\"\n          render={() => <Signup user={user} register={register} />}\n        />\n        <Route\n          path=\"/\"\n          render={(props) =>\n            user?.id ? (\n              <Home user={user} logout={logout} />\n            ) : (\n              <Signup user={user} register={register} />\n            )\n          }\n        />\n      </Switch>\n    </UserContext.Provider>\n  );\n};\n\nexport default withRouter(Routes);\n","import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\n\nimport { theme } from \"./themes/theme\";\nimport Routes from \"./routes\";\nimport axios from \"axios\";\n\naxios.interceptors.request.use(async function (config) {\n  const token = await localStorage.getItem(\"statistic-token\");\n  config.headers[\"x-access-token\"] = token;\n\n  return config;\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Box my={3}>\n          <Routes />\n        </Box>\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}